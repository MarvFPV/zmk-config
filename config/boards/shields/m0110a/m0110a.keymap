/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define default   0
#define nav       1
#define bluetooth 2

/ {
	combos {
	compatible = "zmk,combos";
		combo_bpc {
			timeout-ms = <27>;
			key-positions = <43 44>;
			bindings = <&kp BSPC>;
		};
		combo_del {
			timeout-ms = <27>;
			key-positions = <26 27>;
			bindings = <&kp DELETE>;
		};
		combo_ae {
            timeout-ms = <27>;
            key-positions = <36 37>;
            bindings = <&kp RA(Q) >;
        };
        combo_ue {
            timeout-ms = <27>;
            key-positions = <25 26>;
            bindings = <&kp RA(Y) >;
        };
        combo_oe {
            timeout-ms = <27>;
            key-positions = <27 28>;
            bindings = <&kp RA(P) >;
        };
        combo_ss {
            timeout-ms = <27>;
            key-positions = <37 38>;
            bindings = <&kp RA(S) >;
        };
    };
};

/ {
        behaviors {
        am: alpha_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "ALPHA_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <170>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default {
           bindings = <
            &kp ESC &kp N1 &kp N2 &kp N3 &kp N4 &kp N5 &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp MINUS &kp EQUAL &kp BSPC      &kp DEL   &kp EQUAL &kp KP_SLASH &kp KP_MULTIPLY
            &kp TAB &kp Q  &kp W  &kp E  &kp R  &kp T  &kp Y  &kp U  &kp I  &kp O  &kp P  &kp LBKT  &kp RBKT                &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp KP_MINUS
            &kp CAPS &kp A &kp S &kp D &kp F &kp G &kp H &am RSHFT J &am RCTRL K &am RALT L &am RGUI SEMI &kp QUOT &kp ENTER              &kp NUM_4 &kp NUM_5 &kp NUM_6 &kp KP_PLUS
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp N &kp M &kp COMMA &kp DOT &kp SLASH &kp RSFT &kp UP                 &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp ENTER 
            &kp LCTRL &mo nav &kp SPACE &kp BSLH  &kp LEFT &kp RIGHT &kp DOWN                                              &kp NUM_0 &am bluetooth DOT
            >;
        };
        nav {
           bindings = <
            &kp TILDE   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none         &none     &none     &none     &none
            &none   &kp F1 &kp F2 &kp F3 &kp F4 &none  &none  &kp LC(LEFT)  &kp UP  &kp LC(RIGHT)  &none  &none     &none                   &none     &none     &none     &none
            &none   &kp F5 &kp F6 &kp F7 &kp F8 &none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none     &none                   &none     &none     &none     &none
            &none   &kp F9 &kp F10 &kp F11 &kp F12  &none  &none  &none  &none  &none  &none  &none     &none                   &none     &none     &none     &none
            &none   &trans &none  &none  &none  &none  &none                                                                &none     &none
            >;
        };
        bluetooth {
           bindings = <
            &bootloader   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none     &none         &none     &none     &none     &none
            &none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none                   &none     &none     &none     &none
            &none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none                   &none     &none     &none     &none
            &none   &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none     &none                   &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &reset
            &none   &none  &none  &none  &none  &none  &none                                                                &bt BT_CLR     &trans
            >;
        };
    };
};